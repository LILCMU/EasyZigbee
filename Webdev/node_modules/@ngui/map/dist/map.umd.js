!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("@angular/core"),require("rxjs/Subject"),require("rxjs/operator/debounceTime"),require("rxjs/Observable"),require("@angular/common"),require("rxjs/ReplaySubject"),require("rxjs/operator/first")):"function"==typeof define&&define.amd?define(["@angular/core","rxjs/Subject","rxjs/operator/debounceTime","rxjs/Observable","@angular/common","rxjs/ReplaySubject","rxjs/operator/first"],e):"object"==typeof exports?exports.map=e(require("@angular/core"),require("rxjs/Subject"),require("rxjs/operator/debounceTime"),require("rxjs/Observable"),require("@angular/common"),require("rxjs/ReplaySubject"),require("rxjs/operator/first")):t.map=e(t["@angular/core"],t["rxjs/Subject"],t["rxjs/operator/debounceTime"],t["rxjs/Observable"],t["@angular/common"],t["rxjs/ReplaySubject"],t["rxjs/operator/first"])}(this,function(t,e,n,i,o,r,a){return function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=32)}([function(e,n){e.exports=t},function(t,e,n){"use strict";function i(t,e){function n(){this.constructor=t}s(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function o(t,e,n,i){var o,r=arguments.length,a=r<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,i);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(r<3?o(a):r>3?o(e,n,a):o(e,n))||a);return r>3&&a&&Object.defineProperty(e,n,a),a}function r(t,e){return function(n,i){e(n,i,t)}}function a(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}e.b=i,e.a=o,e.d=r,e.c=a;/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};Object.assign},function(t,e,n){"use strict";n.d(e,"a",function(){return m});var i=n(1),o=n(0),r=(n.n(o),n(6)),a=n(8),s=n(7),p=n(5),c=n(4),u=n(11),l=(n.n(u),n(12)),d=(n.n(l),n(10)),g=["backgroundColor","center","disableDefaultUI","disableDoubleClickZoom","draggable","draggableCursor","draggingCursor","heading","keyboardShortcuts","mapMaker","mapTypeControl","mapTypeId","maxZoom","minZoom","noClear","overviewMapControl","panControl","panControlOptions","rotateControl","scaleControl","scrollwheel","streetView","styles","tilt","zoom","streetViewControl","zoomControl","zoomControlOptions","mapTypeControlOptions","overviewMapControlOptions","rotateControlOptions","scaleControlOptions","streetViewControlOptions","fullscreenControl","fullscreenControlOptions","options","geoFallbackCenter"],h=["bounds_changed","center_changed","click","dblclick","drag","dragend","dragstart","heading_changed","idle","typeid_changed","mousemove","mouseout","mouseover","projection_changed","resize","rightclick","tilesloaded","tile_changed","zoom_changed","mapClick","mapMouseover","mapMouseout","mapMousemove","mapDrag","mapDragend","mapDragstart"],m=function(){function t(t,e,n,i,r,a,s){var p=this;this.optionBuilder=t,this.elementRef=e,this.geolocation=n,this.geoCoder=i,this.nguiMap=r,this.apiLoader=a,this.zone=s,this.mapReady$=new o.EventEmitter,this.mapOptions={},this.inputChanges$=new u.Subject,this.infoWindows={},this.mapIdledOnce=!1,this.initializeMapAfterDisplayed=!1,a.load(),h.forEach(function(t){return p[t]=new o.EventEmitter})}return t.prototype.ngAfterViewInit=function(){var t=this;this.apiLoaderSub=this.apiLoader.api$.subscribe(function(){return t.initializeMap()})},t.prototype.ngAfterViewChecked=function(){this.initializeMapAfterDisplayed&&this.el&&this.el.offsetWidth>0&&this.initializeMap()},t.prototype.ngOnChanges=function(t){this.inputChanges$.next(t)},t.prototype.initializeMap=function(){var t=this;if(this.el=this.elementRef.nativeElement.querySelector(".google-map"),this.el&&0===this.el.offsetWidth)return void(this.initializeMapAfterDisplayed=!0);this.initializeMapAfterDisplayed=!1,this.mapOptions=this.optionBuilder.googlizeAllInputs(g,this),this.mapOptions.zoom=this.mapOptions.zoom||15,"string"==typeof this.mapOptions.center&&delete this.mapOptions.center,this.zone.runOutsideAngular(function(){t.map=new google.maps.Map(t.el,t.mapOptions),t.map.mapObjectName="NguiMapComponent",t.mapOptions.center||t.setCenter(),t.nguiMap.setObjectEvents(h,t,"map"),t.map.addListener("idle",function(){t.mapIdledOnce||(t.mapIdledOnce=!0,setTimeout(function(){t.mapReady$.emit(t.map)}))}),l.debounceTime.call(t.inputChanges$,1e3).subscribe(function(e){return t.nguiMap.updateGoogleObject(t.map,e)}),"undefined"!=typeof window&&window.nguiMapRef&&(window.nguiMapRef.map=t.map)})},t.prototype.setCenter=function(){var t=this;this.center?"string"==typeof this.center&&this.geoCoder.geocode({address:this.center}).subscribe(function(e){t.map.setCenter(e[0].geometry.location)},function(e){t.map.setCenter(t.mapOptions.geoFallbackCenter||new google.maps.LatLng(0,0))}):this.geolocation.getCurrentPosition().subscribe(function(e){var n=new google.maps.LatLng(e.coords.latitude,e.coords.longitude);t.map.setCenter(n)},function(e){console.error("ngui-map: Error finding the current position"),t.map.setCenter(t.mapOptions.geoFallbackCenter||new google.maps.LatLng(0,0))})},t.prototype.openInfoWindow=function(t,e){this.infoWindows[t].open(e)},t.prototype.closeInfoWindow=function(t){this.infoWindows[t]&&this.infoWindows[t].close()},t.prototype.ngOnDestroy=function(){this.inputChanges$.complete(),this.el&&!this.initializeMapAfterDisplayed&&this.nguiMap.clearObjectEvents(h,this,"map"),this.apiLoaderSub&&this.apiLoaderSub.unsubscribe()},t.prototype.addToMapObjectGroup=function(t,e){var i=n.i(d.a)(t.toLowerCase())+"s";this.map[i]=this.map[i]||[],this.map[i].push(e)},t.prototype.removeFromMapObjectGroup=function(t,e){var i=n.i(d.a)(t.toLowerCase())+"s";if(this.map&&this.map[i]){var o=this.map[i].indexOf(e);o>-1&&this.map[i].splice(o,1)}},t}();i.a([n.i(o.Output)(),i.c("design:type",o.EventEmitter)],m.prototype,"mapReady$",void 0),m=i.a([n.i(o.Component)({selector:"ngui-map",providers:[p.a,r.a,s.a,a.a],styles:["\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  "],inputs:g,outputs:h,encapsulation:o.ViewEncapsulation.None,template:'\n    <div class="google-map"></div>\n    <ng-content></ng-content>\n  '}),i.c("design:paramtypes",[r.a,o.ElementRef,a.a,s.a,p.a,c.a,o.NgZone])],m)},function(t,e,n){"use strict";n.d(e,"a",function(){return r});var i=n(1),o=n(0),r=(n.n(o),function(){function t(t,e,n,i){var r=this;this.nguiMapComponent=t,this.mapObjectName=e,this.inputs=n,this.outputs=i,this.initialized$=new o.EventEmitter,this._subscriptions=[],this.nguiMap=this.nguiMapComponent.nguiMap,this.optionBuilder=this.nguiMapComponent.optionBuilder,this.outputs.forEach(function(t){return r[t]=new o.EventEmitter}),this.mapObjectName=e}return t.prototype.ngOnInit=function(){var t=this;this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(function(e){return t.initialize()})},t.prototype.initialize=function(){this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this),"string"==typeof this.objectOptions.position&&delete this.objectOptions.position,"string"==typeof this.objectOptions.center&&delete this.objectOptions.center,this.libraryName?this.mapObject=new google.maps[this.libraryName][this.mapObjectName](this.objectOptions):this.mapObject=new google.maps[this.mapObjectName](this.objectOptions),this.mapObject.setMap(this.nguiMapComponent.map),this.mapObject.mapObjectName=this.mapObjectName,this.mapObject.nguiMapComponent=this.nguiMapComponent,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)},t.prototype.ngOnChanges=function(t){this.nguiMap.updateGoogleObject(this.mapObject,t)},t.prototype.ngOnDestroy=function(){this._subscriptions.map(function(t){return t.unsubscribe()}),this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName,this.mapObject),this.mapObject&&this.nguiMap.clearObjectEvents(this.outputs,this,"mapObject")},t}());i.a([n.i(o.Output)(),i.c("design:type",o.EventEmitter)],r.prototype,"initialized$",void 0)},function(t,e,n){"use strict";n.d(e,"a",function(){return c}),n.d(e,"c",function(){return u}),n.d(e,"b",function(){return l});var i=n(1),o=n(0),r=(n.n(o),n(34)),a=(n.n(r),n(9)),s=n(10),p=n(35),c=(n.n(p),function(){function t(t){this.config=t,this.api$=p.first.call(new r.ReplaySubject(1)),this.config=this.config||{apiUrl:"https://maps.google.com/maps/api/js"}}return t.prototype.ngOnDestroy=function(){this.api$.complete()},t}()),u=function(t){function e(e,n){var i=t.call(this,n)||this;return i.zone=e,i}return i.b(e,t),e.prototype.load=function(){var t=this;"undefined"!=typeof window&&(n.i(s.b)()?this.api$.next(google.maps):document.querySelector("#ngui-map-api")||(window.nguiMapRef=window.nguiMapRef||[],window.nguiMapRef.push({zone:this.zone,componentFn:function(){return t.api$.next(google.maps)}}),this.addGoogleMapsApi()))},e.prototype.addGoogleMapsApi=function(){window.initNguiMap=window.initNguiMap||function(){window.nguiMapRef.forEach(function(t){t.zone.run(function(){t.componentFn()})}),window.nguiMapRef.splice(0,window.nguiMapRef.length)};var t=document.createElement("script");t.id="ngui-map-api";var e=this.config.apiUrl;e+=-1!==e.indexOf("?")?"&":"?",t.src=e+"callback=initNguiMap",document.querySelector("body").appendChild(t)},e}(c);u=i.a([n.i(o.Injectable)(),i.d(1,n.i(o.Optional)()),i.d(1,n.i(o.Inject)(a.a)),i.c("design:paramtypes",[o.NgZone,Object])],u);var l=function(t){function e(e){return t.call(this,e)||this}return i.b(e,t),e.prototype.load=function(){var t=this;if("undefined"!=typeof window)if(n.i(s.b)())this.api$.next(google.maps);else if(!document.querySelector("#ngui-map-api")){var e=document.createElement("script");e.id="ngui-map-api",e.async=!0,e.onload=function(){return t.api$.next(google.maps)},e.src=this.config.apiUrl,document.querySelector("body").appendChild(e)}},e}(c);l=i.a([n.i(o.Injectable)(),i.d(0,n.i(o.Optional)()),i.d(0,n.i(o.Inject)(a.a)),i.c("design:paramtypes",[Object])],l)},function(t,e,n){"use strict";n.d(e,"a",function(){return s});var i=n(1),o=n(0),r=(n.n(o),n(6)),a=n(7),s=function(){function t(t,e,n){var i=this;this.geoCoder=t,this.optionBuilder=e,this.zone=n,this.updateGoogleObject=function(t,e){var n,o,r;if(t)for(var a in e)r="set"+a.replace(/^[a-z]/,function(t){return t.toUpperCase()}),o=e[a].currentValue,-1!==["position","center"].indexOf(a)&&"string"==typeof o?function(e){i.geoCoder.geocode({address:o}).subscribe(function(n){"function"==typeof t[e]?t[e](n[0].geometry.location):console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\nPlease check Google Maps API documentation, and use "setOptions" instead.')})}(r):(n=i.optionBuilder.googlize(o),"function"==typeof t[r]?t[r](n):console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\nPlease check Google Maps API documentation, and use "setOptions" instead.'))}}return t.prototype.setObjectEvents=function(t,e,n){var i=this;t.forEach(function(t){var o=t.replace(/([A-Z])/g,function(t){return"_"+t.toLowerCase()}).replace(/^map_/,""),r=i.zone;r.runOutsideAngular(function(){e[n].addListener(o,function(n){var i=n||{};i.target=this,r.run(function(){return e[t].emit(i)})})})})},t.prototype.clearObjectEvents=function(t,e,n){var i=this;t.forEach(function(t){var o=t.replace(/([A-Z])/g,function(t){return"_"+t.toLowerCase()}).replace(/^map_/,"");i.zone.runOutsideAngular(function(){google.maps.event.clearListeners(e[n],o)})}),e[n]&&(e[n].setMap&&e[n].setMap(null),delete e[n].nguiMapComponent,delete e[n])},t}();s=i.a([n.i(o.Injectable)(),i.c("design:paramtypes",[a.a,r.a,o.NgZone])],s)},function(t,e,n){"use strict";n.d(e,"a",function(){return a});var i=n(1),o=n(0),r=(n.n(o),n(10)),a=function(){function t(){}return t.prototype.googlizeAllInputs=function(t,e){var n=this,i={};return e.options?(i=e.options,this.onlyOptionsGiven(t,e)||console.error('when "options" are used, other options are ignored')):t.forEach(function(t){void 0!==e[t]&&(i[t]=n.googlize(e[t],{key:t}))}),i},t.prototype.googlizeMultiple=function(t,e){e=e||{};for(var n in t){var i=t[n];"string"!=typeof i?e[n]=i:e.doNotConverStringToNumber&&i.match(/^[0-9]+$/)||(e[n]=this.googlize(i,{key:n}))}return e},t.prototype.googlize=function(t,e){e=e||{};var n=t;if("string"==typeof t&&(n="false"!==t&&("0"===t?0:this.getJSONParsed(t,e)||this.getAnyMapObject(t)||this.getAnyMapConstant(t,e)||this.getDateObject(t)||t)),e.key){var i=e.key;n instanceof Array?"bounds"===i?n=new google.maps.LatLngBounds(n[0],n[1]):"icons"===i?n=this.getMapIcons(n):("position"===i||i.match(/^geoFallback/))&&(n=this.getLatLng(n)):n instanceof Object&&("icon"===i?n=this.getMarkerIcon(n):i.match(/ControlOptions$/)&&(n=this.getMapControlOption(n)))}return delete n.doNotConverStringToNumber,delete n.key,n},t.prototype.getLatLng=function(t){var e;return t[0].constructor===Array?e=t.map(function(t){return new google.maps.LatLng(t[0],t[1])}):!isNaN(parseFloat(t[0]))&&isFinite(t[0])&&(e=new google.maps.LatLng(t[0],t[1])),e},t.prototype.getJSONParsed=function(t,e){var i;try{if((i=n.i(r.c)(t))instanceof Array)i[0].constructor!==Object&&(i=this.getLatLng(i));else if(i===Object(i)){var o=e;o.doNotConverStringToNumber=!0,i=this.googlizeMultiple(i,o)}}catch(t){}return i},t.prototype.getAnyMapObject=function(t){var e;if(t.match(/^[A-Z][a-zA-Z0-9]+\(.*\)$/))try{e=Function("return new google.maps."+t+";")()}catch(t){}return e},t.prototype.getAnyMapConstant=function(t,e){var n;if(t.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/))try{var i=t.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/);n=google.maps[i[1]][i[2]]}catch(t){}else if(t.match(/^[A-Z]+$/))try{var o=e.key.charAt(0).toUpperCase()+e.key.slice(1);n=google.maps[o][t]}catch(t){}return n},t.prototype.getMapControlOption=function(t){var e=t;for(var n in e)if(e[n]){var i=e[n];if("string"==typeof i?i=i.toUpperCase():"mapTypeIds"===n&&(i=i.map(function(t){return t.match(/^[A-Z]+$/)?google.maps.MapTypeId[t.toUpperCase()]:t})),"style"===n){var o=n.replace(/Options$/,"")+"Style";e[n]=google.maps[o][i]}else e[n]="position"===n?google.maps.ControlPosition[i]:i}return e},t.prototype.getDateObject=function(t){var e;if(t.match(/^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*)?)([zZ]|([+\-])(\d\d):?(\d\d))?$/))try{e=new Date(t)}catch(t){}return e},t.prototype.getMapIcons=function(t){return t.map(function(t){return t.icon.path.match(/^[A-Z_]+$/)&&(t.icon.path=google.maps.SymbolPath[t.icon.path]),t})},t.prototype.getMarkerIcon=function(t){var e=t;(""+e.path).match(/^[A-Z_]+$/)&&(e.path=google.maps.SymbolPath[e.path]);for(var n in e){var i=e[n];"anchor"===n||"origin"===n||"labelOrigin"===n?e[n]=new google.maps.Point(i[0],i[1]):"size"!==n&&"scaledSize"!==n||(e[n]=new google.maps.Size(i[0],i[1]))}return e},t.prototype.onlyOptionsGiven=function(t,e){for(var n=0;n<t.length;n++){var i=t[n];if("options"!==i&&void 0!==e[i])return!1}return!0},t}();a=i.a([n.i(o.Injectable)()],a)},function(t,e,n){"use strict";n.d(e,"a",function(){return s});var i=n(1),o=n(0),r=(n.n(o),n(30)),a=(n.n(r),n(4)),s=function(){function t(t){this.apiLoader=t,this.apiLoaderSubs=[]}return t.prototype.geocode=function(t){var e=this;return new r.Observable(function(n){e.apiLoaderSubs.push(e.apiLoader.api$.subscribe(function(){return e.requestGeocode(t,n)}))})},t.prototype.ngOnDestroy=function(){this.apiLoaderSubs.map(function(t){return t.unsubscribe()})},t.prototype.requestGeocode=function(t,e){(new google.maps.Geocoder).geocode(t,function(t,n){n===google.maps.GeocoderStatus.OK?(e.next(t),e.complete()):e.error(t)})},t}();s=i.a([n.i(o.Injectable)(),i.c("design:paramtypes",[a.a])],s)},function(t,e,n){"use strict";n.d(e,"a",function(){return a});var i=n(1),o=n(0),r=(n.n(o),n(30)),a=(n.n(r),function(){function t(){}return t.prototype.getCurrentPosition=function(t){return t=t||{timeout:5e3},new r.Observable(function(e){navigator.geolocation?navigator.geolocation.getCurrentPosition(function(t){e.next(t),e.complete()},function(t){return e.error(t)},t):e.error("Browser Geolocation service failed.")})},t}());a=i.a([n.i(o.Injectable)()],a)},function(t,e,n){"use strict";n.d(e,"a",function(){return o});var i=n(0),o=(n.n(i),new i.OpaqueToken("NG_MAP_CONFIG_TOKEN"))},function(t,e,n){"use strict";function i(t){try{return JSON.parse(t),t}catch(e){return t.replace(/([\$\w]+)\s*:/g,function(t,e){return'"'+e+'":'}).replace(/'([^']+)'/g,function(t,e){return'"'+e+'"'})}}function o(t){if("string"==typeof t){var e=/^[\+\-]?[0-9\.]+,[ ]*\ ?[\+\-]?[0-9\.]+$/;return t.match(e)&&(t="["+t+"]"),JSON.parse(i(t))}return t}function r(t){return t.replace(/(?:^\w|[A-Z]|\b\w)/g,function(t,e){return 0===e?t.toLowerCase():t.toUpperCase()}).replace(/\s+/g,"")}function a(){return"object"==typeof google&&"object"==typeof google.maps}e.c=o,e.a=r,e.b=a},function(t,n){t.exports=e},function(t,e){t.exports=n},function(t,e,n){"use strict";function i(t,e){return new(function(t){function e(e,n){var i=t.call(this)||this;return i.visible=!0,i.setPosition=function(t){if(i.htmlEl.style.visibility="hidden","Array"===t.constructor.name)i.position=new google.maps.LatLng(t[0],t[1]);else if("string"==typeof t){var e=new google.maps.Geocoder;e.geocode({address:t},function(t,e){e===google.maps.GeocoderStatus.OK&&i.setPosition(t[0].geometry.location)})}else t&&"function"==typeof t.lng&&(i.position=t);if(i.getProjection()&&"function"==typeof i.position.lng){var n=function(){var t=i.getProjection().fromLatLngToDivPixel(i.position),e=Math.round(t.x-i.htmlEl.offsetWidth/2),n=Math.round(t.y-i.htmlEl.offsetHeight/2);i.htmlEl.style.left=e+"px",i.htmlEl.style.top=n+"px",i.htmlEl.style.visibility="visible"};i.htmlEl.offsetWidth&&i.htmlEl.offsetHeight?n():setTimeout(function(){return n()})}},i.htmlEl=e,i.position=n,i}return o.b(e,t),e.prototype.onAdd=function(){this.getPanes().overlayMouseTarget.appendChild(this.htmlEl),this.htmlEl.style.position="absolute"},e.prototype.draw=function(){this.setPosition(this.position),this.setZIndex(this.zIndex),this.setVisible(this.visible)},e.prototype.onRemove=function(){},e.prototype.getPosition=function(){return this.position},e.prototype.setZIndex=function(t){t&&(this.zIndex=t),this.htmlEl.style.zIndex=this.zIndex},e.prototype.setVisible=function(t){this.htmlEl.style.display=t?"inline-block":"none",this.visible=t},e}(google.maps.OverlayView))(t,e)}n.d(e,"a",function(){return d});var o=n(1),r=n(0),a=(n.n(r),n(11)),s=(n.n(a),n(12)),p=(n.n(s),n(5)),c=n(2),u=["position"],l=["animationChanged","click","clickableChanged","cursorChanged","dblclick","drag","dragend","draggableChanged","dragstart","flatChanged","iconChanged","mousedown","mouseout","mouseover","mouseup","positionChanged","rightclick","shapeChanged","titleChanged","visibleChanged","zindexChanged","map_click","map_mouseover","map_mouseout","map_mouseup","map_mousedown","map_drag","map_dragend"],d=function(){function t(t,e,n){var i=this;this.nguiMapComponent=t,this.elementRef=e,this.nguiMap=n,this.initialized$=new r.EventEmitter,this.inputChanges$=new a.Subject,this.elementRef.nativeElement.style.display="none",l.forEach(function(t){return i[t]=new r.EventEmitter})}return t.prototype.ngOnInit=function(){var t=this;this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(function(e){return t.initialize()})},t.prototype.ngOnChanges=function(t){this.inputChanges$.next(t)},t.prototype.ngOnDestroy=function(){this.inputChanges$.complete(),this.nguiMapComponent.removeFromMapObjectGroup("CustomMarker",this.mapObject),this.mapObject&&this.nguiMap.clearObjectEvents(l,this,"mapObject")},t.prototype.initialize=function(){var t=this;this.el=this.elementRef.nativeElement,this.mapObject=i(this.el,this.position),this.mapObject.setMap(this.nguiMapComponent.map),this.nguiMap.setObjectEvents(l,this,"mapObject"),s.debounceTime.call(this.inputChanges$,1e3).subscribe(function(e){return t.nguiMap.updateGoogleObject(t.mapObject,e)}),this.nguiMapComponent.addToMapObjectGroup("CustomMarker",this.mapObject),this.initialized$.emit(this.mapObject)},t}();o.a([n.i(r.Output)(),o.c("design:type",r.EventEmitter)],d.prototype,"initialized$",void 0),d=o.a([n.i(r.Component)({selector:"ngui-map > custom-marker",inputs:u,outputs:l,template:"\n    <ng-content></ng-content>\n  "}),o.c("design:paramtypes",[c.a,r.ElementRef,p.a])],d)},function(t,e,n){"use strict";n.d(e,"a",function(){return l});var i=n(1),o=n(0),r=(n.n(o),n(11)),a=(n.n(r),n(12)),s=(n.n(a),n(5)),p=n(2),c=["content","disableAutoPan","maxWidth","pixelOffset","position","zIndex","options"],u=["closeclick","content_changed","domready","position_changed","zindex_changed"],l=function(){function t(t,e,n){var i=this;this.elementRef=t,this.nguiMap=e,this.nguiMapComponent=n,this.initialized$=new o.EventEmitter,this.objectOptions={},this.inputChanges$=new r.Subject,this.elementRef.nativeElement.style.display="none",u.forEach(function(t){return i[t]=new o.EventEmitter})}return t.prototype.ngOnInit=function(){var t=this;this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(function(e){return t.initialize()})},t.prototype.ngOnChanges=function(t){this.inputChanges$.next(t)},t.prototype.initialize=function(){var t=this;this.objectOptions=this.nguiMapComponent.optionBuilder.googlizeAllInputs(c,this),this.infoWindow=new google.maps.InfoWindow(this.objectOptions),this.infoWindow.mapObjectName="InfoWindow",this.elementRef.nativeElement.id?this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id]=this:console.error('An InfoWindow must have an id. e.g. id="detail"'),this.nguiMap.setObjectEvents(u,this,"infoWindow"),a.debounceTime.call(this.inputChanges$,1e3).subscribe(function(e){return t.nguiMap.updateGoogleObject(t.infoWindow,e)}),this.nguiMapComponent.addToMapObjectGroup("InfoWindow",this.infoWindow),this.initialized$.emit(this.infoWindow)},t.prototype.open=function(t){this.infoWindow.setContent(this.template.element.nativeElement),this.infoWindow.open(this.nguiMapComponent.map,t)},t.prototype.close=function(){this.infoWindow&&this.infoWindow.close()},t.prototype.ngOnDestroy=function(){this.inputChanges$.complete(),this.infoWindow&&(this.nguiMap.clearObjectEvents(u,this,"infoWindow"),delete this.infoWindow)},t}();i.a([n.i(o.Output)(),i.c("design:type",o.EventEmitter)],l.prototype,"initialized$",void 0),i.a([n.i(o.ViewChild)("template",{read:o.ViewContainerRef}),i.c("design:type",o.ViewContainerRef)],l.prototype,"template",void 0),l=i.a([n.i(o.Component)({selector:"ngui-map > info-window",inputs:c,outputs:u,template:"<div #template><ng-content></ng-content></div>"}),i.c("design:paramtypes",[o.ElementRef,s.a,p.a])],l)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=[],p=[],c=function(t){function e(e){return t.call(this,e,"BicyclingLayer",s,p)||this}return i.b(e,t),e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > bicycling-layer",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["center","clickable","draggable","editable","fillColor","fillOpacity","map","radius","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex","options","geoFallbackCenter"],p=["centerChanged","click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","radiusChanged","rightclick"],c=function(t){function e(e){var n=t.call(this,e,"Circle",s,p)||this;return n.nguiMapComp=e,n.objectOptions={},n}return i.b(e,t),e.prototype.initialize=function(){t.prototype.initialize.call(this),this.setCenter()},e.prototype.setCenter=function(){var t=this;this.center?"string"==typeof this.center&&this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address:this.center}).subscribe(function(e){t.mapObject.setCenter(e[0].geometry.location)},function(e){console.error("ngui-map, error in finding location from",t.center),t.mapObject.setCenter(t.objectOptions.geoFallbackCenter||new google.maps.LatLng(0,0))})):this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(function(e){var n=new google.maps.LatLng(e.coords.latitude,e.coords.longitude);t.mapObject.setCenter(n)},function(e){console.error("ngui-map, error in finding the current position"),t.mapObject.setCenter(t.objectOptions.geoFallbackCenter||new google.maps.LatLng(0,0))}))},e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map>circle, ngui-map>map-circle",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["controlPosition","controls","drawingMode","featureFactory","style","geoJson"],p=["addfeature","click","dblclick","mousedown","mouseout","mouseover","mouseup","removefeature","removeproperty","rightclick","setgeometry","setproperty"],c=function(t){function e(e){return t.call(this,e,"Data",s,p)||this}return i.b(e,t),e.prototype.initialize=function(){this.geoJson?this.nguiMapComponent.map.data.addGeoJson(this.geoJson):this.geoJsonUrl?this.nguiMapComponent.map.data.loadGeoJson(this.geoJsonUrl):(this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this),this.nguiMapComponent.map.data.add(this.objectOptions)),this.mapObject=this.nguiMapComponent.map.data,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)},e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > data-layer",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return u});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=n(8),p=["directions","draggable","hideRouteList","infoWindow","panel","markerOptions","polylineOptions","preserveViewport","routeIndex","suppressBicyclingLayer","suppressInfoWindows","suppressMarkers","suppressPolylines"],c=["directions_changed"],u=function(t){function e(e,n){var i=t.call(this,e,"DirectionsRenderer",p,c)||this;return i.geolocation=n,i}return i.b(e,t),e.prototype.initialize=function(){this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this),"string"==typeof this.objectOptions.panel&&(this.objectOptions.panel=document.querySelector(this.objectOptions.panel)),this.directionsService=new google.maps.DirectionsService,this.directionsRenderer=new google.maps.DirectionsRenderer(this.objectOptions),this.directionsRenderer.setMap(this.nguiMapComponent.map),this.showDirections(this.directionsRequest),this.nguiMap.setObjectEvents(this.outputs,this,"directionsRenderer"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.directionsRenderer)},e.prototype.ngOnChanges=function(t){var e={};for(var n in t)-1!==this.inputs.indexOf(n)&&(e[n]=this.optionBuilder.googlize(t[n].currentValue));t.directionsRequest&&this.directionsRenderer&&this.directionsService&&this.showDirections(this.directionsRequest)},e.prototype.showDirections=function(t){var e=this;this.directionsService.route(t,function(t,n){n===google.maps.DirectionsStatus.OK?e.directionsRenderer.setDirections(t):console.error("Directions request failed due to "+n)})},e.prototype.ngOnDestroy=function(){t.prototype.ngOnDestroy.call(this),this.nguiMap.clearObjectEvents(this.outputs,this,"directionsRenderer")},e}(r.a);i.a([n.i(o.Input)("directions-request"),i.c("design:type",Object)],u.prototype,"directionsRequest",void 0),u=i.a([n.i(o.Directive)({selector:"ngui-map > directions-renderer",inputs:p,outputs:c}),i.c("design:paramtypes",[a.a,s.a])],u)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["options","circleOptions","drawingControl","drawingControlOptions","drawingMode","map","markerOptions","polygonOptions","polylineOptions","rectangleOptions"],p=["circlecomplete","markercomplete","overlaycomplete","polygoncomplete","polylinecomplete","rectanglecomplete"],c=function(t){function e(e){var n=t.call(this,e,"DrawingManager",s,p)||this;return n.libraryName="drawing",n}return i.b(e,t),e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > drawing-manager",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["url","bounds","clickable","opacity"],p=["click","dblclick"],c=function(t){function e(e){var n=t.call(this,e,"GroundOverlay",s,p)||this;return n.objectOptions={},n}return i.b(e,t),e.prototype.initialize=function(){this.objectOptions=this.optionBuilder.googlizeAllInputs(["clickable","opacity"],this),this.mapObject=new google.maps.GroundOverlay(this.url,this.bounds,this.objectOptions),this.mapObject.setMap(this.nguiMapComponent.map),this.mapObject.mapObjectName=this.mapObjectName,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)},e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > ground-overlay",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["data","dissipating","gradient","maxIntensity","opacity","radius","options"],p=[],c=function(t){function e(e){var n=t.call(this,e,"HeatmapLayer",s,p)||this;return n.libraryName="visualization",n}return i.b(e,t),e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > heatmap-layer",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["clickable","preserveViewport","screenOverlays","suppressInfoWindows","url","zIndex","options"],p=["click","defaultviewport_changed","status_changed"],c=function(t){function e(e){return t.call(this,e,"KmlLayer",s,p)||this}return i.b(e,t),e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > kml-layer",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["anchorPoint","animation","clickable","cursor","draggable","icon","label","opacity","optimized","place","position","shape","title","visible","zIndex","options","geoFallbackPosition"],p=["animationChanged","click","clickableChanged","cursorChanged","dblclick","drag","dragend","draggableChanged","dragstart","flatChanged","iconChanged","mousedown","mouseout","mouseover","mouseup","positionChanged","rightclick","shapeChanged","titleChanged","visibleChanged","zindexChanged"],c=function(t){function e(e){var n=t.call(this,e,"Marker",s,p)||this;return n.nguiMapComp=e,n.objectOptions={},n}return i.b(e,t),e.prototype.ngOnInit=function(){var t=this;this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(function(e){return t.initialize()})},e.prototype.initialize=function(){t.prototype.initialize.call(this),this.setPosition()},e.prototype.setPosition=function(){var t=this;this.position?"string"==typeof this.position&&this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address:this.position}).subscribe(function(e){t.mapObject.setPosition(e[0].geometry.location)},function(e){console.error("ngui-map, error finding the location from",t.position),t.mapObject.setPosition(t.objectOptions.geoFallbackPosition||new google.maps.LatLng(0,0))})):this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(function(e){var n=new google.maps.LatLng(e.coords.latitude,e.coords.longitude);t.mapObject.setPosition(n)},function(e){console.error("ngui-map, error finding the current location"),t.mapObject.setPosition(t.objectOptions.geoFallbackPosition||new google.maps.LatLng(0,0))}))},e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > marker",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return s});var i=n(1),o=n(0),r=(n.n(o),n(4)),a=n(6),s=function(){function t(t,e,n){var i=this;this.optionBuilder=t,this.elementRef=e,this.apiLoader=n,this.place_changed=new o.EventEmitter,this.initialized$=new o.EventEmitter,this.initialize=function(){i.objectOptions=i.optionBuilder.googlizeAllInputs(["bounds","componentRestrictions","types"],i),i.autocomplete=new google.maps.places.Autocomplete(i.elementRef.nativeElement,i.objectOptions),i.autocomplete.addListener("place_changed",function(t){i.place_changed.emit(i.autocomplete.getPlace())}),i.initialized$.emit(i.autocomplete)},n.load(),n.api$.subscribe(function(){return i.initialize()})}return t}();i.a([n.i(o.Input)("bounds"),i.c("design:type",Object)],s.prototype,"bounds",void 0),i.a([n.i(o.Input)("componentRestrictions"),i.c("design:type",Object)],s.prototype,"componentRestrictions",void 0),i.a([n.i(o.Input)("types"),i.c("design:type",Array)],s.prototype,"types",void 0),i.a([n.i(o.Output)("place_changed"),i.c("design:type",o.EventEmitter)],s.prototype,"place_changed",void 0),i.a([n.i(o.Output)(),i.c("design:type",o.EventEmitter)],s.prototype,"initialized$",void 0),s=i.a([n.i(o.Directive)({selector:"[places-auto-complete]"}),i.c("design:paramtypes",[a.a,o.ElementRef,r.a])],s)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["clickable","draggable","editable","fillColor","fillOpacity","geodesic","paths","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex","options"],p=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],c=function(t){function e(e){return t.call(this,e,"Polygon",s,p)||this}return i.b(e,t),e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map>polygon, ngui-map>map-polygon",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["clickable","draggable","editable","geodesic","icons","path","strokeColor","strokeOpacity","strokeWeight","visible","zIndex","options"],p=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],c=function(t){function e(e){return t.call(this,e,"Polyline",s,p)||this}return i.b(e,t),e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > polyline",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["selector","options","addressControl","addressControlOptions","clickToGo","disableDefaultUI","disableDoubleClickZoom","enableCloseButton","fullscreenControl","fullscreenControlOptions","imageDateControl","linksControl","motionTracking","motionTrackingControl","panControl","panControlOptions","pano","position","pov","scrollwheel","showRoadLabels","visible","zoomControl","zoomControlOptions"],p=["closeclick","pano_changed","position_changed","pov_changed","resize","status_changed","visible_changed","zoom_changed"],c=function(t){function e(e){return t.call(this,e,"StreetViewPanorama",s,p)||this}return i.b(e,t),e.prototype.initialize=function(){this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this);var t;this.objectOptions.selector?(t=document.querySelector(this.selector),delete this.objectOptions.selector):t=this.nguiMapComponent.el,"string"==typeof this.objectOptions.position&&delete this.objectOptions.position,this.mapObject=new google.maps[this.mapObjectName](t,this.objectOptions),this.mapObject.mapObjectName=this.mapObjectName,this.mapObject.nguiMapComponent=this.nguiMapComponent,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)},e.prototype.ngOnDestroy=function(){this.nguiMapComponent.el&&this.nguiMap.clearObjectEvents(this.outputs,this,"mapObject")},e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > street-view-panorama",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=["autoRefresh","options"],p=[],c=function(t){function e(e){return t.call(this,e,"TrafficLayer",s,p)||this}return i.b(e,t),e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > traffic-layer",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e,n){"use strict";n.d(e,"a",function(){return c});var i=n(1),o=n(0),r=(n.n(o),n(3)),a=n(2),s=[],p=[],c=function(t){function e(e){return t.call(this,e,"TransitLayer",s,p)||this}return i.b(e,t),e}(r.a);c=i.a([n.i(o.Directive)({selector:"ngui-map > transit-layer",inputs:s,outputs:p}),i.c("design:paramtypes",[a.a])],c)},function(t,e){t.exports=i},function(t,e,n){"use strict";n.d(e,"a",function(){return R});var i=n(1),o=n(0),r=(n.n(o),n(33)),a=(n.n(r),n(6)),s=n(7),p=n(8),c=n(9),u=n(4),l=n(2),d=n(14),g=n(13),h=n(15),m=n(16),f=n(17),b=n(18),y=n(19),v=n(20),O=n(21),j=n(22),C=n(23),M=n(5),w=n(24),z=n(25),k=n(26),E=n(27),x=n(28),I=n(29),L=[l.a,d.a,C.a,m.a,g.a,z.a,d.a,k.a,v.a,I.a,x.a,O.a,h.a,j.a,f.a,E.a,w.a,b.a,y.a],R=A=function(){function t(){}return t.forRoot=function(t){return void 0===t&&(t={}),{ngModule:A,providers:[{provide:c.a,useValue:t}]}},t}();R=A=i.a([n.i(o.NgModule)({imports:[r.CommonModule],declarations:L,exports:[L],providers:[s.a,p.a,M.a,a.a,{provide:u.a,useClass:u.c}]})],R);var A},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(15);n.d(e,"BicyclingLayer",function(){return i.a});var o=n(8);n.d(e,"NavigatorGeolocation",function(){return o.a});var r=n(6);n.d(e,"OptionBuilder",function(){return r.a});var a=n(9);n.d(e,"NG_MAP_CONFIG_TOKEN",function(){return a.a});var s=n(4);n.d(e,"NgMapApiLoader",function(){return s.a}),n.d(e,"NgMapAsyncApiLoader",function(){return s.b}),n.d(e,"NgMapAsyncCallbackApiLoader",function(){return s.c});var p=n(2);n.d(e,"NguiMapComponent",function(){return p.a});var c=n(14);n.d(e,"InfoWindow",function(){return c.a});var u=n(13);n.d(e,"CustomMarker",function(){return u.a});var l=n(16);n.d(e,"Circle",function(){return l.a});var d=n(17);n.d(e,"DataLayer",function(){return d.a});var g=n(18);n.d(e,"DirectionsRenderer",function(){return g.a});var h=n(19);n.d(e,"DrawingManager",function(){return h.a});var m=n(7);n.d(e,"GeoCoder",function(){return m.a});var f=n(20);n.d(e,"GroundOverlay",function(){return f.a});var b=n(21);n.d(e,"HeatmapLayer",function(){return b.a});var y=n(22);n.d(e,"KmlLayer",function(){return y.a});var v=n(23);n.d(e,"Marker",function(){return v.a});var O=n(5);n.d(e,"NguiMap",function(){return O.a});var j=n(24);n.d(e,"PlacesAutoComplete",function(){return j.a});var C=n(25);n.d(e,"Polygon",function(){return C.a});var M=n(26);n.d(e,"Polyline",function(){return M.a});var w=n(27);n.d(e,"StreetViewPanorama",function(){return w.a});var z=n(28);n.d(e,"TrafficLayer",function(){return z.a});var k=n(29);n.d(e,"TransitLayer",function(){return k.a});var E=n(31);n.d(e,"NguiMapModule",function(){return E.a})},function(t,e){t.exports=o},function(t,e){t.exports=r},function(t,e){t.exports=a}])});
//# sourceMappingURL=map.umd.js.map